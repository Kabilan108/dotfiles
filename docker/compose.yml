services:
  nginx:
    container_name: nginx-proxy
    image: nginx:alpine
    networks:
      - proxy-network
    ports:
      - "80:80"
    restart: unless-stopped
    volumes:
      - ./nginx:/etc/nginx/conf.d

  jellyfin:
    container_name: jellyfin
    devices:
      - /dev/dri:/dev/dri  # hardware acceleration
    entrypoint: ["/entrypoint.sh"]
    environment:
      - JELLYFIN_PublishedServerUrl=http://lisan-al-gaib/jellyfin
    image: jellyfin/jellyfin:latest
    networks:
      - proxy-network
    ports:
      - "8096:8096"
    restart: unless-stopped
    user: 1000:1000
    volumes:
      - /home/muaddib/docker/jellyfin/config/:/config
      - /mnt/media:/media  # media mount, read-only
      - /etc/localtime:/etc/localtime:ro  # sync container time with host
      - ./jellyfin/entrypoint.sh:/entrypoint.sh

  open-webui:
    container_name: open-webui
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      - ENV=dev  # enable /docs
      - ENABLE_SIGNUP=True
      - DEFAULT_USER_ROLE=admin

      # set model for title generation, web search
      - TASK_MODEL_EXTERNAL=openai/gpt-4o-mini

      # - ENABLE_RAG_WEB_SEARCH=True
      # - RAG_WEB_SEARCH_ENGINE=google_pse

      - RAG_EMBEDDING_MODEL_AUTO_UPDATE=True
      - RAG_RERANKING_MODEL_AUTO_UPDATE=True
      - RAG_EMBEDDING_MODEL_TRUST_REMOTE_CODE=True
      - RAG_RERANKING_MODEL_TRUST_REMOTE_CODE=True

      - WHISPER_MODEL=base

      - ENABLE_OLLAMA_API=False

      - OPENAI_API_KEY=${OPENAI_API_KEY}
    image: ghcr.io/open-webui/open-webui:main
    networks:
      - proxy-network
    ports:
      - "7000:8080"
    restart: unless-stopped
    volumes:
      - open-webui:/app/backend/data

networks:
  proxy-network:

volumes:
  open-webui:
